import { Metadata } from "next";
import { cookies } from "next/headers";
import React, { Suspense } from "react";
import { Refine, GitHubBanner } from "@refinedev/core";
import { DevtoolsProvider } from "@providers/devtools";
import { RefineKbar, RefineKbarProvider } from "@refinedev/kbar";
import { useNotificationProvider } from "@refinedev/antd";
import routerProvider from "@refinedev/nextjs-router";

import { customDataProvider } from "@providers/data-provider";
import { AntdRegistry } from "@ant-design/nextjs-registry";
import "@refinedev/antd/dist/reset.css";
import { AppIcon } from "@components/app-icon";
import { ColorModeContextProvider } from "@contexts/color-mode";
import { authProviderClient } from "@providers/auth-provider/auth-provider.client";
import { UserOutlined, AppstoreOutlined, ExperimentOutlined, TeamOutlined, SafetyCertificateOutlined, EnvironmentOutlined } from "@ant-design/icons";
import { GiPlantRoots, GiPlantSeed, GiFlowerPot } from "react-icons/gi";

export const metadata: Metadata = {
  title: "Refine",
  description: "Generated by create refine app",
  icons: {
    icon: "/favicon.ico",
  },
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookieStore = cookies();
  const theme = cookieStore.get("theme");
  const defaultMode = theme?.value === "dark" ? "dark" : "light";

  return (
    <html lang="en">
      <body>
        <Suspense>
          <RefineKbarProvider>
            <AntdRegistry>
              <ColorModeContextProvider defaultMode={defaultMode}>
                <DevtoolsProvider>
                  <Refine
                    routerProvider={routerProvider}
                    dataProvider={customDataProvider}
                    notificationProvider={useNotificationProvider}
                    authProvider={authProviderClient}
                    resources={[
                      {
                        name: "user-management",
                        // Remove the list property - this is just a parent group
                        meta: {
                          label: "User Management",
                          icon: <TeamOutlined />,
                        },
                      },
                      {
                        name: "persons",
                        list: "/persons",
                        create: "/persons/create",
                        edit: "/persons/edit/:id",
                        show: "/persons/show/:id",
                        meta: {
                          canDelete: true,
                          icon: <UserOutlined />,
                          parent: "user-management",
                        },
                      },
                      {
                        name: "roles",
                        list: "/roles",
                        create: "/roles/create",
                        edit: "/roles/edit/:id",
                        show: "/roles/show/:id",
                        meta: {
                          canDelete: true,
                          icon: <SafetyCertificateOutlined />,
                          parent: "user-management",
                        },
                      },
                      {
                        name: "plant-management",
                        // Remove the list property here too - this is just a parent group
                        meta: {
                          label: "Plant Management",
                          icon: <GiPlantRoots />,
                        },
                      },
                      {
                        name: "plant-types",
                        list: "/plant-types",
                        create: "/plant-types/create",
                        edit: "/plant-types/edit/:id",
                        show: "/plant-types/show/:id",
                        meta: {
                          canDelete: true,
                          icon: <AppstoreOutlined />,
                          parent: "plant-management",
                        },
                      },
                      {
                        name: "plants",
                        list: "/plants",
                        create: "/plants/create",
                        edit: "/plants/edit/:id",
                        show: "/plants/show/:id",
                        meta: {
                          canDelete: true,
                          icon: <GiFlowerPot />,
                          parent: "plant-management",
                        },
                      },
                      {
    name: "objects",
    list: "/objects",
    create: "/objects/create",
    edit: "/objects/edit/:id",
    show: "/objects/show/:id",
    meta: {
      canDelete: true,
      icon: <UserOutlined />,
    },
  },
]}
                    options={{
                      syncWithLocation: true,
                      warnWhenUnsavedChanges: true,
                      useNewQueryKeys: true,
                      projectId: "nIEltG-uCpbQS-GCuwdu",
                      title: { text: "backoffice", icon: <AppIcon /> },
                    }}
                  >
                    {children}
                    <RefineKbar />
                  </Refine>
                </DevtoolsProvider>
              </ColorModeContextProvider>
            </AntdRegistry>
          </RefineKbarProvider>
        </Suspense>
      </body>
    </html>
  );
}